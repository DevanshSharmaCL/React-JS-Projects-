{"ast":null,"code":"var _jsxFileName = \"C:\\\\Devansh\\\\coding\\\\ReactJS\\\\Practice\\\\UseEffect\\\\src\\\\ContextAPIExampler-1.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, createContext, useContext } from 'react';\n\n// Create the context (magic box)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nfunction App() {\n  _s();\n  const [theme, setTheme] = useState('light'); // initial theme is light\n\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: theme,\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setTheme(theme === 'light' ? 'dark' : 'light'),\n      children: \"Toggle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"c/tiXTWXTQispzpG//dV5FX41vQ=\");\n_c = App;\nfunction Button() {\n  _s2();\n  // Consume the data from the context\n  const theme = useContext(ThemeContext);\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    style: {\n      background: theme === 'light' ? '#fff' : '#333',\n      color: theme === 'light' ? '#000' : '#fff'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      children: [\"I\\u2019m a \", theme, \" button\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n// Exporting a component that renders our App\n_s2(Button, \"+C1P7ukOg/azcV4AZ819oyezFOE=\");\n_c2 = Button;\nconst ContextAPI = () => {\n  return /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n};\n_c3 = ContextAPI;\nexport default ContextAPI;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"ContextAPI\");","map":{"version":3,"names":["React","useState","createContext","useContext","jsxDEV","_jsxDEV","ThemeContext","App","_s","theme","setTheme","Provider","value","children","Toolbar","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","Button","_s2","style","background","color","_c2","ContextAPI","_c3","$RefreshReg$"],"sources":["C:/Devansh/coding/ReactJS/Practice/UseEffect/src/ContextAPIExampler-1.jsx"],"sourcesContent":["import React, { useState, createContext, useContext } from 'react';\r\n\r\n// Create the context (magic box)\r\nconst ThemeContext = createContext();\r\n\r\nfunction App() {\r\n  const [theme, setTheme] = useState('light'); // initial theme is light\r\n\r\n  return (\r\n    <ThemeContext.Provider value={theme}>\r\n      <Toolbar />\r\n      <button onClick={() => setTheme(theme === 'light' ? 'dark' : 'light')}>\r\n        Toggle\r\n      </button>\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction Button() {\r\n  // Consume the data from the context\r\n  const theme = useContext(ThemeContext);\r\n\r\n  return (\r\n    <body\r\n    style={{\r\n        background: theme === 'light' ? '#fff' : '#333',\r\n        color: theme === 'light' ? '#000' : '#fff'\r\n      }}>\r\n    <button>\r\n      Iâ€™m a {theme} button\r\n    </button>\r\n    </body>\r\n  );\r\n}\r\n\r\n// Exporting a component that renders our App\r\nconst ContextAPI = () => {\r\n  return <App />;\r\n};\r\n\r\nexport default ContextAPI;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,gBAAGJ,aAAa,CAAC,CAAC;AAEpC,SAASK,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;;EAE7C,oBACEI,OAAA,CAACC,YAAY,CAACK,QAAQ;IAACC,KAAK,EAAEH,KAAM;IAAAI,QAAA,gBAClCR,OAAA,CAACS,OAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXb,OAAA;MAAQc,OAAO,EAAEA,CAAA,KAAMT,QAAQ,CAACD,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAE;MAAAI,QAAA,EAAC;IAEvE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B;AAACV,EAAA,CAXQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAeZ,SAASc,MAAMA,CAAA,EAAG;EAAAC,GAAA;EAChB;EACA,MAAMb,KAAK,GAAGN,UAAU,CAACG,YAAY,CAAC;EAEtC,oBACED,OAAA;IACAkB,KAAK,EAAE;MACHC,UAAU,EAAEf,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,MAAM;MAC/CgB,KAAK,EAAEhB,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG;IACtC,CAAE;IAAAI,QAAA,eACJR,OAAA;MAAAQ,QAAA,GAAQ,aACA,EAACJ,KAAK,EAAC,SACf;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEX;;AAEA;AAAAI,GAAA,CAjBSD,MAAM;AAAAK,GAAA,GAANL,MAAM;AAkBf,MAAMM,UAAU,GAAGA,CAAA,KAAM;EACvB,oBAAOtB,OAAA,CAACE,GAAG;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChB,CAAC;AAACU,GAAA,GAFID,UAAU;AAIhB,eAAeA,UAAU;AAAC,IAAAP,EAAA,EAAAM,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}