{"ast":null,"code":"var _jsxFileName = \"C:\\\\Devansh\\\\coding\\\\ReactJS\\\\Practice\\\\Everthing\\\\src\\\\All Topics\\\\useReducer\\\\Example-1.jsx\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\n\n// Reducer function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction reducer(state, action) {\n  if (action.type === 'increment') {\n    return state + 1;\n  }\n  if (action.type === 'decrement') {\n    return state - 1;\n  }\n  return state;\n}\nfunction Counter() {\n  _s();\n  const [count, dispatch] = useReducer(reducer, 0); // Initial state = 0\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'increment'\n      }),\n      children: \"Add 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'decrement'\n      }),\n      children: \"Subtract 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Counter, \"liV/BQV6CNHjKwIp3lC+ZlJzhnY=\");\n_c = Counter;\nexport default Counter;\n\n// What’s Happening:\n// reducer checks the action.type and updates count.\n// dispatch({ type: 'increment' }) tells it to add 1.\n// The component re-renders with the new count.\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useReducer","jsxDEV","_jsxDEV","reducer","state","action","type","Counter","_s","count","dispatch","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Devansh/coding/ReactJS/Practice/Everthing/src/All Topics/useReducer/Example-1.jsx"],"sourcesContent":["import React, { useReducer } from 'react';\r\n\r\n// Reducer function\r\nfunction reducer(state, action) {\r\n  if (action.type === 'increment') {\r\n    return state + 1;\r\n  }\r\n  if (action.type === 'decrement') {\r\n    return state - 1;\r\n  }\r\n  return state;\r\n}\r\n\r\nfunction Counter() {\r\n  const [count, dispatch] = useReducer(reducer, 0); // Initial state = 0\r\n\r\n  return (\r\n    <div>\r\n      <h1>{count}</h1>\r\n      <button onClick={() => dispatch({ type: 'increment' })}>Add 1</button>\r\n      <button onClick={() => dispatch({ type: 'decrement' })}>Subtract 1</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Counter;\r\n\r\n\r\n// What’s Happening:\r\n// reducer checks the action.type and updates count.\r\n// dispatch({ type: 'increment' }) tells it to add 1.\r\n// The component re-renders with the new count."],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC9B,IAAIA,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAOF,KAAK,GAAG,CAAC;EAClB;EACA,IAAIC,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAOF,KAAK,GAAG,CAAC;EAClB;EACA,OAAOA,KAAK;AACd;AAEA,SAASG,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,UAAU,CAACG,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;;EAElD,oBACED,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAKF;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBb,OAAA;MAAQc,OAAO,EAAEA,CAAA,KAAMN,QAAQ,CAAC;QAAEJ,IAAI,EAAE;MAAY,CAAC,CAAE;MAAAK,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtEb,OAAA;MAAQc,OAAO,EAAEA,CAAA,KAAMN,QAAQ,CAAC;QAAEJ,IAAI,EAAE;MAAY,CAAC,CAAE;MAAAK,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxE,CAAC;AAEV;AAACP,EAAA,CAVQD,OAAO;AAAAU,EAAA,GAAPV,OAAO;AAYhB,eAAeA,OAAO;;AAGtB;AACA;AACA;AACA;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}