{"ast":null,"code":"var _jsxFileName = \"C:\\\\Devansh\\\\coding\\\\ReactJS\\\\Practice\\\\UseEffect\\\\src\\\\UseEffect.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UseEffect = () => {\n  _s();\n  const [clicked, setClicked] = useState(\"\"); // ✅ Default value set\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    alert(\"we are in the useEffect!\"); // This runs when 'clicked' changes\n    return () => {\n      console.log(\"return of use state\");\n    }; //basically the is used for clean up , , what will happen is that , this code will be running ,\"we are in the useeffect , line 8 , willl be executed after , line 10 , basically used for clean up \"\n  }, [clicked]); // ✅ Triggers only when 'clicked' changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setClicked(\"I\"),\n      children: \"I\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setClicked(\"am\"),\n      children: \"am\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setClicked(\"Cyberlight\"),\n      children: \"Cyberlight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: clicked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(UseEffect, \"i9twSh79grsiLL5qtrdCSJxXZTw=\");\n_c = UseEffect;\nexport default UseEffect;\nvar _c;\n$RefreshReg$(_c, \"UseEffect\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","UseEffect","_s","clicked","setClicked","count","setCount","alert","console","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Devansh/coding/ReactJS/Practice/UseEffect/src/UseEffect.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst UseEffect = () => {\r\n  const [clicked, setClicked] = useState(\"\"); // ✅ Default value set\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    alert(\"we are in the useEffect!\"); // This runs when 'clicked' changes\r\n    return()=>{\r\n      console.log(\"return of use state\")\r\n    }//basically the is used for clean up , , what will happen is that , this code will be running ,\"we are in the useeffect , line 8 , willl be executed after , line 10 , basically used for clean up \"\r\n  }, [clicked]); // ✅ Triggers only when 'clicked' changes\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => setClicked(\"I\")}>I</button>\r\n      <br />\r\n      <hr />\r\n      <button onClick={() => setClicked(\"am\")}>am</button>\r\n      <br />\r\n      <hr />\r\n      <button onClick={() => setClicked(\"Cyberlight\")}>Cyberlight</button>\r\n      <br />\r\n      <hr />\r\n      <h1>{clicked}</h1>\r\n      <button onClick={() => setCount(count + 1)}>Increment</button>\r\n      <h2>Count: {count}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UseEffect;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAErCD,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,0BAA0B,CAAC,CAAC,CAAC;IACnC,OAAM,MAAI;MACRC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC,CAAC;EACH,CAAC,EAAE,CAACN,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEf,oBACEH,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAQW,OAAO,EAAEA,CAAA,KAAMP,UAAU,CAAC,GAAG,CAAE;MAAAM,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClDf,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNf,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNf,OAAA;MAAQW,OAAO,EAAEA,CAAA,KAAMP,UAAU,CAAC,IAAI,CAAE;MAAAM,QAAA,EAAC;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpDf,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNf,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNf,OAAA;MAAQW,OAAO,EAAEA,CAAA,KAAMP,UAAU,CAAC,YAAY,CAAE;MAAAM,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpEf,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNf,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNf,OAAA;MAAAU,QAAA,EAAKP;IAAO;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClBf,OAAA;MAAQW,OAAO,EAAEA,CAAA,KAAML,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;MAAAK,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9Df,OAAA;MAAAU,QAAA,GAAI,SAAO,EAACL,KAAK;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEV,CAAC;AAACb,EAAA,CA3BID,SAAS;AAAAe,EAAA,GAATf,SAAS;AA6Bf,eAAeA,SAAS;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}